{"version":3,"sources":["components/West.js","components/South.js","components/East.js","components/North.js","App.js","serviceWorker.js","index.js"],"names":["West","state","name","handleChange","event","_this","setState","target","value","this","react_default","a","createElement","components_North","components_South","components_East","onChange","type","React","Component","South","components_West","East","North","App","northCount","southCount","eastCount","westCount","IncrementItem","DecreaseItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b95e5884.chunk.js","sourcesContent":["import React from 'react';\n\nimport North from \"./North\";\nimport South from \"./South\";\nimport East from \"./East\";\n\n\n    class West extends React.Component {\n\n\n        state = {\n          name: ''\n      \n        }\n        handleChange = event => {\n            this.setState({ name: event.target.value });\n        };\n      \n        render() {\n          if (this.state.name === \"north\") {\n            return (\n              <North />\n            \n            );\n          }\n          if (this.state.name === \"south\") {\n            return (\n              <South />\n            );\n          }\n      \n          if (this.state.name === \"east\") {\n            return (\n              <East />\n            );\n          }\n      \n          if (this.state.name === \"west\") {\n            return (\n              <West />\n            );\n          }\n          return ( \n           \n            <div>\n            \n            <h1>Grod, the Conquerer</h1>\n              <input onChange={this.handleChange} />\n              <input type=\"submit\" value=\"Submit\" />\n              <p>You are going WEST!!</p>\n        \n      \n      </div>\n          );\n        }\n        \n      }\n  \n  export default West;","import React from 'react';\n\nimport North from \"./North\";\nimport East from \"./East\";\nimport West from \"./West\";\n\n\n    class South extends React.Component {\n\n\n        state = {\n          name: ''\n      \n        }\n        handleChange = event => {\n            this.setState({ name: event.target.value });\n        };\n      \n        render() {\n          if (this.state.name === \"north\") {\n            return (\n              <North />\n            \n            );\n          }\n          if (this.state.name === \"south\") {\n            return (\n              <South />\n            );\n          }\n      \n          if (this.state.name === \"east\") {\n            return (\n              <East />\n            );\n          }\n      \n          if (this.state.name === \"west\") {\n            return (\n              <West />\n            );\n          }\n          return ( \n           \n            <div>\n            \n            <h1>Grod, the Conquerer</h1>\n              <input onChange={this.handleChange} />\n              <input type=\"submit\" value=\"Submit\" />\n\n              <p>You are going SOUTH!!</p>\n        \n      \n      </div>\n          );\n        }\n        \n      }\n  \n  export default South;","import React from 'react';\n\nimport North from \"./North\";\nimport South from \"./South\";\nimport West from \"./West\";\n\n\n    class East extends React.Component {\n\n\n        state = {\n          name: ''\n      \n        }\n        handleChange = event => {\n            this.setState({ name: event.target.value });\n        };\n      \n        render() {\n          if (this.state.name === \"north\") {\n            return (\n              <North />\n            \n            );\n          }\n          if (this.state.name === \"south\") {\n            return (\n              <South />\n            );\n          }\n      \n          if (this.state.name === \"east\") {\n            return (\n              <East />\n            );\n          }\n      \n          if (this.state.name === \"west\") {\n            return (\n              <West />\n            );\n          }\n          return ( \n           \n            <div>\n            \n            <h1>Grod, the Conquerer</h1>\n              <input onChange={this.handleChange} />\n              <input type=\"submit\" value=\"Submit\" />\n              <p>You are going EAST!!</p>\n        \n      \n      </div>\n          );\n        }\n        \n      }\n  \n  export default East;","import React from 'react';\n\nimport East from \"./East\";\nimport South from \"./South\";\nimport West from \"./West\";\n\n\n    class North extends React.Component {\n\n\n        state = {\n          name: ''\n      \n        }\n        handleChange = event => {\n            this.setState({ name: event.target.value });\n        };\n      \n        render() {\n          if (this.state.name === \"north\") {\n            return (\n              <North />\n            \n            );\n          }\n          if (this.state.name === \"south\") {\n            return (\n              <South />\n            );\n          }\n      \n          if (this.state.name === \"east\") {\n            return (\n              <East />\n            );\n          }\n      \n          if (this.state.name === \"west\") {\n            return (\n              <West />\n            );\n          }\n          return ( \n           \n            <div>\n            \n            <h1>Grod, the Conquerer</h1>\n              <input onChange={this.handleChange} />\n              <input type=\"submit\" value=\"Submit\" />\n              <p>I am Grod from Zod. You are going NORTH!!</p>\n        \n      \n      </div>\n          );\n        }\n        \n      }\n  \n  export default North;","import React from 'react';\n\nimport North from \"./components/North\";\nimport South from \"./components/South\";\nimport East from \"./components/East\";\nimport West from \"./components/West\";\n\n\n\nclass App extends React.Component {\n\n\n  state = {\n    name: '',\n    northCount: 0,\n    southCount: 0,\n    eastCount: 0,\n    westCount: 0\n\n  }\n\n  handleChange = event => {\n      this.setState({ name: event.target.value });\n  };\n\n  handleSubmit(event) {\n     \n    \n}\n\n  IncrementItem = () => {\n    this.setState({ northCount: this.state.northCount + 1 });\n  };\n\n  DecreaseItem = () => {\n    this.setState({ northCount: this.state.northCount - 1 });\n  };\n\n  render() {\n    if (this.state.name === \"north\") {\n      \n      return (\n        <North />\n      \n      );\n    }\n    if (this.state.name === \"south\") {\n      return (\n        <South />\n      );\n    }\n\n    if (this.state.name === \"east\") {\n      return (\n        <East />\n      );\n    }\n\n    if (this.state.name === \"west\") {\n      return (\n        <West />\n      );\n    }\n\n    return ( \n     \n      <div>\n      \n      <h1>Grod, the Conquerer</h1>\n        <input value={this.state.value} onChange={this.handleChange} />\n        <input type=\"submit\" value=\"Submit\" />\n  \n\n</div>\n    );\n  }\n  \n}\n\n\n\n\nexport default App;\n // eslint-disable-next-line\n{/*\n  \n <input onChange={this.handleChange} />\n\n         this.northCount = this.IncrementItem,\n        alert(this.northCount),\n\n\n  ################# THIS IS THE FORM ########################\n\n      <form onSubmit={this.handleSubmit}>\n      <label>\n        Type Here:\n        <input value={this.state.value} onChange={this.handleChange} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n     \n    </form>\n\n    ###################################################################\n\n\n    ############### THESE ARE OLD COMPONENTS ############################\n\n    <Header />\n    <Story1 />\n    <Story2 />\n    <Story3 />\n\n    ###################################################################\n\n    ############# THIS GOES BEFORE FINAL RENDER COMPONENT #############\n\n    const Story1 = () => (\n\n  <p>Here is story 1.</p>\n);\n\nconst Story2 = () => (\n\n  <p>Here is story 2.</p>\n);\n\nconst Story3= () => (\n\n  <p>Here is story 3.</p>\n);\n\nclass Header extends React.Component {\n  render() {\n    \n    return (\n    <div><h1>\"The most amazing adventur game in the world!\"</h1></div>\n    );\n  }\n}\n\n###################################################################\n\n    \n*/}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}